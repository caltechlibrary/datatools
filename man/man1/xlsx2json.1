.\" Automatically generated by Pandoc 3.0
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "" "" "" "" ""
.hy
.PP
USAGE: xlsx2json [OPTIONS] EXCEL_WORKBOOK_NAME [SHEET_NAME]
.PP
DESCRIPTION
.PP
xlsx2json is a tool that converts individual Excel Workbook Sheets into
JSON output.
.PP
OPTIONS
.IP
.nf
\f[C]
-N, -sheets         display sheet names in Excel Workbook
-c, -count          display number of sheets in Excel Workbook
-examples           display example(s)
-generate-manpage   generate man page
-generate-markdown  generate markdown documentation
-h, -help           display help
-l, -license        display license
-nl, -newline       if true add a trailing newline
-o, -output         output filename
-quiet              suppress error messages
-v, -version        display version
\f[R]
.fi
.PP
EXAMPLES
.PP
This would get the sheet named \[lq]Sheet 1\[rq] from
\[lq]MyWorkbook.xlsx\[rq] and save as sheet1.json
.IP
.nf
\f[C]
xlsx2json MyWorkbook.xlsx \[dq]My worksheet 1\[dq] > sheet1.json
\f[R]
.fi
.PP
This would get the number of sheets in the workbook
.IP
.nf
\f[C]
xlsx2json -count MyWorkbook.xlsx
\f[R]
.fi
.PP
This will output the title of the sheets in the workbook
.IP
.nf
\f[C]
xlsx2json -sheets MyWorkbook.xlsx
\f[R]
.fi
.PP
Putting it all together in a shell script and convert all sheets to into
JSON documents..
.IP
.nf
\f[C]
xlsx2json -N MyWorkbook.xlsx | while read SHEET_NAME; do
    JSON_NAME=\[dq]${SHEET_NAME// /-}.json\[dq]
    xlsx2json -o \[dq]${JSON_NAME}\[dq] MyWorkbook.xlsx \[dq]$SHEET_NAME\[dq]
done
\f[R]
.fi
.PP
xlsx2json 1.2.1
