.\" Automatically generated by Pandoc 2.9.2.1
.\"
.TH "string (1) user manual" "" "" "" ""
.hy
.SH NAME
.PP
string
.SH SYNOPSIS
.PP
string OPTIONS [VERB] [VERB PARAMETERS\&...]
.SH DESCRIPTION
.PP
string is a command line tool for transforming strings in common ways.
.IP \[bu] 2
string length
.IP \[bu] 2
changing cases
.IP \[bu] 2
checking for prefixes, suffixes
.IP \[bu] 2
trimming prefixes, suffixes and cutsets (i.e.\ list of characters to
cut)
.IP \[bu] 2
position, counting and replacing substrings
.IP \[bu] 2
splitting a string into a JSON array of strings, joining JSON a string
arrays into a string
.PP
VERB refers to the operation to performed on the supplied string(s).
VER PARAMETERS are thsose additional terms need to complete the process
provided by the VERB.
.SH OPTIONS
.PP
Options always come before the VERB.
.TP
-help
display help
.PP
-license :display license
.TP
-version
display version
.TP
-d, -delimiter
set the delimiter
.TP
-do, -output-delimiter
set the output delimiter
.TP
-i, -input
input file name
.TP
-nl, -newline
if true add a trailing newline
.TP
-o, -output
output file name
.TP
-quiet
suppress error messages
.SS VERBS
.TP
contains
has substrings: SUBSTRING [STRING]
\f[C]string contains SUBSTRING [STRING]\f[R]
.TP
count
count substrings: SUBSTRING [STRING]
\f[C]string count SUBSTRING [STRING]\f[R]
.TP
englishtitle
English style title case: [STRING]
\f[C]string englishtitle [STRING]\f[R]
.TP
hasprefix
true/false on prefix: PREFIX [STRING]
\f[C]string hasprefix PREFIX [STRING]\f[R]
.TP
hassuffix
true/false on suffix: SUFFIX [STRING]
\f[C]string hassuffix SUFFIX [STRING]\f[R]
.TP
join
join JSON array into string: DELIMITER [JSON_ARRAY]
\f[C]string join DELIMITER [JSON_ARRAY]\f[R]
.TP
length
length of string: [STRING] \f[C]string length [STRING]\f[R]
.TP
padleft
left pad PADDING MAX_LENGTH [STRING]
\f[C]string padleft PADDING MAX_LENGTH [STRING]\f[R]
.TP
padright
right pad PADDING MAX_LENGTH [STRING]
\f[C]string padright PADDING MAX_LENGTH [STRING]\f[R]
.TP
position
position of substring: SUBSTRING [STRING]
\f[C]string position SUBSTRING [STRING]\f[R]
.TP
replace
replace: OLD NEW [STRING] \f[C]string replace OLD NEW [STRING]\f[R]
.TP
replacen
replace n times: OLD NEW N [STRING]
\f[C]string replacen OLD NEW N [STRING]\f[R]
.TP
slice
copy a substring: START END [STRING]
\f[C]string slice START END [STRING]\f[R]
.TP
split
split into a JSON array: DELIMITER [STRING]
\f[C]string split DELIMITER [STRING]\f[R]
.TP
splitn
split into an N length JSON array: DELIMITER N [STRING]
\f[C]string splitn DELIMITER N [STRING]\f[R]
.TP
tolower
to lower case: [STRING] \f[C]string tolower [STRING]\f[R]
.TP
totitle
to title case: [STRING] \f[C]string totitle [STRING]\f[R]
.TP
toupper
to upper case: [STRING] \f[C]string toupper [STRING]\f[R]
.TP
trim
trim (beginning and end), CUTSET [STRING]
\f[C]string trim CURSET [STRING]\f[R]
.TP
trimleft
left trim CUTSET [STRING] \f[C]string trimleft CUTSET [STRING]\f[R]
.TP
trimprefix
trims prefix: PREFIX [STRING]
\f[C]string trimprefix PREFIX [STRING]\f[R]
.TP
trimright
right trim: CUTSET [STRING] \f[C]string trimright CUTSET [STRING]\f[R]
.TP
trimspace
trim leading and trailing spaces: [STRING]
\f[C]string trimspace [STRING]\f[R]
.TP
trimsuffix
trim suffix: SUFFIX [STRING] \f[C]string trimsuffix SUFFIX [STRING]\f[R]
.SH EXAMPLES
.PP
Convert text to upper case
.IP
.nf
\f[C]
    string toupper \[dq]one\[dq]
\f[R]
.fi
.PP
Convert text to lower case
.IP
.nf
\f[C]
    string tolower \[dq]ONE\[dq]
\f[R]
.fi
.PP
Captialize an English phrase
.IP
.nf
\f[C]
    string englishtitle \[dq]one more thing to know\[dq]
\f[R]
.fi
.PP
Split a space newline delimited list of words into a JSON array
.IP
.nf
\f[C]
    string -i wordlist.txt split \[dq]\[rs]n\[dq]
\f[R]
.fi
.PP
Join a JSON array of strings into a newline delimited list
.IP
.nf
\f[C]
    string join \[aq]\[rs]n\[aq] \[aq][\[dq]one\[dq],\[dq]two\[dq],\[dq]three\[dq],\[dq]four\[dq],\[dq]five\[dq]]\[aq]
\f[R]
.fi
.PP
string 1.2.2
.SH AUTHORS
R. S. Doiel.
