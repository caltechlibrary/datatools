.\" Automatically generated by Pandoc 3.0
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "" "" "" "" ""
.hy
.PP
USAGE: string [OPTIONS] [VERB] [VERB PARAMETERS\&...]
.PP
DESCRIPTION
.PP
string is a command line tool for transforming strings in common ways.
.IP \[bu] 2
string length
.IP \[bu] 2
changing cases
.IP \[bu] 2
checking for prefixes, suffixes
.IP \[bu] 2
trimming prefixes, suffixes and cutsets (i.e.\ list of characters to
cut)
.IP \[bu] 2
position, counting and replacing substrings
.IP \[bu] 2
splitting a string into a JSON array of strings, joining JSON a string
arrays into a string
.PP
OPTIONS
.IP
.nf
\f[C]
-d, -delimiter           set the delimiter
-do, -output-delimiter   set the output delimiter
-e, -examples            display examples
-generate-manpage        generate man page
-generate-markdown       generate Markdown documentation
-h, -help                display help
-i, -input               input file name
-l, -license             display license
-nl, -newline            if true add a trailing newline
-o, -output              output file name
-quiet                   suppress error messages
-v, -version             display version
\f[R]
.fi
.PP
VERBS
.IP
.nf
\f[C]
contains       has substrings: SUBSTRING [STRING]
                \[ga]string contains SUBSTRING [STRING]\[ga]

count          count substrings: SUBSTRING [STRING]
                \[ga]string count SUBSTRING [STRING]\[ga]

englishtitle   English style title case: [STRING]
                \[ga]string englishtitle [STRING]\[ga]

hasprefix      true/false on prefix: PREFIX [STRING]
                \[ga]string hasprefix PREFIX [STRING]\[ga]

hassuffix      true/false on suffix: SUFFIX [STRING]
                \[ga]string hassuffix SUFFIX [STRING]\[ga]

join           join JSON array into string: DELIMITER [JSON_ARRAY]
                \[ga]string join DELIMITER [JSON_ARRAY]\[ga]

length         length of string: [STRING]
                \[ga]string length [STRING]\[ga]

padleft        left pad: PADDING MAX_LENGTH [STRING]
                \[ga]string padleft PADDING MAX_LENGTH [STRING]\[ga]

padright       right pad: PADDING MAX_LENGTH [STRING]
                \[ga]string padright PADDING MAX_LENGTH [STRING]\[ga]

position       position of substring: SUBSTRING [STRING]
                \[ga]string position SUBSTRING [STRING]\[ga]

replace        replace: OLD NEW [STRING]
                \[ga]string replace OLD NEW [STRING]\[ga]

replacen       replace n times: OLD NEW N [STRING]
                \[ga]string replacen OLD NEW N [STRING]\[ga]

slice          copy a substring: START END [STRING]
                \[ga]string slice START END [STRING]\[ga]

split          split into a JSON array: DELIMITER [STRING]
                \[ga]string split DELIMITER [STRING]\[ga]

splitn         split into an N length JSON array: DELIMITER N [STRING]
                \[ga]string splitn DELIMITER N [STRING]\[ga]

tolower        to lower case: [STRING]
                \[ga]string tolower [STRING]\[ga]

totitle        to title case: [STRING]
                \[ga]string totitle [STRING]\[ga]

toupper        to upper case: [STRING]
                \[ga]string toupper [STRING]\[ga]

trim           trim (beginning and end), CUTSET [STRING]
                \[ga]string trim CURSET [STRING]\[ga]

trimleft       left trim: CUTSET [STRING]
                \[ga]string trimleft CUTSET [STRING]\[ga]

trimprefix     trims prefix: PREFIX [STRING]
                \[ga]string trimprefix PREFIX [STRING]\[ga]

trimright      right trim: CUTSET [STRING]
                \[ga]string trimright CUTSET [STRING]\[ga]

trimspace      trim leading and trailing spaces: [STRING]
                \[ga]string trimspace [STRING]\[ga]

trimsuffix     trim suffix: SUFFIX [STRING]
                \[ga]string trimsuffix SUFFIX [STRING]\[ga]
\f[R]
.fi
.PP
EXAMPLES
.PP
Convert text to upper case
.IP
.nf
\f[C]
string toupper \[dq]one\[dq]
\f[R]
.fi
.PP
Convert text to lower case
.IP
.nf
\f[C]
string tolower \[dq]ONE\[dq]
\f[R]
.fi
.PP
Captialize an English phrase
.IP
.nf
\f[C]
string englishtitle \[dq]one more thing to know\[dq]
\f[R]
.fi
.PP
Split a space newline delimited list of words into a JSON array
.IP
.nf
\f[C]
string -i wordlist.txt split \[dq]\[rs]n\[dq]
\f[R]
.fi
.PP
Join a JSON array of strings into a newline delimited list
.IP
.nf
\f[C]
string join \[aq]\[rs]n\[aq] \[aq][\[dq]one\[dq],\[dq]two\[dq],\[dq]three\[dq],\[dq]four\[dq],\[dq]five\[dq]]\[aq]
\f[R]
.fi
.PP
string 1.2.1
