.\" Automatically generated by Pandoc 3.1.12
.\"
.TH "csvcols" "1" "{release_date}" "user manual" "version 1.2.6 {release_hash}"
.SH NAME
csvcols
.SH SYNOPSIS
csvcols OPTIONS [ARGS_AS_COL_VALUES]
.SH DESCRIPTION
csvcols converts a set of command line args into columns output in CSV
format.
.PP
It can also be used CSV input rows and rendering only the column numbers
listed on the commandline (first column is 1 not 0).
.SH OPTIONS
.TP
\-help
display help
.TP
\-license
display license
.TP
\-version
display version
.TP
\-col, \-cols
output specified columns (e.g.\ \-col 1,12:14,2,4))
.TP
\-d, \-delimiter
set the input delimiter character
.TP
\-i, \-input
input filename
.TP
\-o, \-output
output filename
.TP
\-od, \-output\-delimiter
set the output delimiter character
.TP
\-quiet
suppress error messages
.TP
\-skip\-header\-row
skip the header row
.TP
\-trim\-leading\-space
trim leading space in field(s) for CSV input
.TP
\-use\-lazy\-quotes
use lazy quotes on CSV input
.TP
\-uuid
add a prefix row with generated UUID cell
.SH EXAMPLES
Simple usage of building a CSV file one row at a time.
.IP
.EX
    csvcols one two three > 3col.csv
    csvcols 1 2 3 >> 3col.csv
    cat 3col.csv
.EE
.PP
Example parsing a pipe delimited string into a CSV line
.IP
.EX
    csvcols \-d \[dq]|\[dq] \[dq]one|two|three\[dq] > 3col.csv
    csvcols \-delimiter \[dq]|\[dq] \[dq]1|2|3\[dq] >> 3col.csv
    cat 3col.csv
.EE
.PP
Using a pipe filter a 3 column CSV for columns 1 and 3 into 2col.csv
.IP
.EX
    cat 3col.csv | csvcols \-col 1,3 > 2col.csv
.EE
.PP
Using options filter a 3 column CSV file for columns 1,3 into 2col.csv
.IP
.EX
    csvcols \-i 3col.csv \-col 1,3 \-o 2col.csv
.EE
.PP
csvcols 1.2.6
.SH AUTHORS
R. S. Doiel.
