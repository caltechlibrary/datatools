.\" Automatically generated by Pandoc 3.0
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "" "" "" "" ""
.hy
.PP
USAGE: jsonmunge [OPTIONS] TEMPLATE_FILENAME
.PP
DESCRIPTION
.PP
jsonmunge is a command line tool that takes a JSON document and one or
more Go templates rendering the results.
Useful for reshaping a JSON document, transforming into a new format, or
filter for specific content.
.IP \[bu] 2
TEMPLATE_FILENAME is the name of a Go text tempate file used to render
the outbound JSON document
.PP
OPTIONS
.IP
.nf
\f[C]
-E, -expression     use template expression as template
-examples           display example(s)
-generate-manpage   generate man page
-generate-markdown  generate markdown documentation
-h, -help           display help
-i, -input          input filename
-l, -license        display license
-nl, -newline       if true add a trailing newline
-o, -output         output filename
-quiet              suppress error messages
-v, -version        display version
\f[R]
.fi
.PP
EXAMPLES
.PP
If person.json contained
.PP
{\[lq]name\[rq]: \[lq]Doe, Jane\[rq],
\[lq]email\[rq]:\[lq]jd\[at]example.org\[rq], \[lq]age\[rq]: 42}
.PP
and the template, name.tmpl, contained
.PP
{{- .name -}}
.PP
Getting just the name could be done with
.IP
.nf
\f[C]
cat person.json | jsonmunge name.tmpl
\f[R]
.fi
.PP
This would yield
.IP
.nf
\f[C]
\[dq]Doe, Jane\[dq]
\f[R]
.fi
.PP
jsonmunge 1.2.1
